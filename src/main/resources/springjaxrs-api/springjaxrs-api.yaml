openapi: 3.0.1
info:
  title: User API
  description: This is User API.
  version: 1.0.0
paths:
  /apiDescription/swaggerFile:
    get:
      summary: Get the api swagger file.
      operationId: getApiSwagger
      responses:
        200:
          description: OK. Successful operation.
          content:
            application/json:
              schema:
                type: string
                description: The Swagger file in YAML or JSON format

  /users:
    get:
      summary: get All users
      responses:
        200:
          description: get all users in the database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        204:
          description: No Content
    post:
      summary: create User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'

      responses:
        200:
          description: user detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /users/{userId}:
    get:
      summary: get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      responses:
        200:
          description: user detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      summary: update user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        200:
          description: user detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      summary: delete user
      parameters:
        - name: userId
          in: path
          description: delete user by providing id
          required: true
          schema:
            type: number
      responses:
        204:
          description: 204 No Content Indicates that the deletion has been accepted
            and successfully processed. Typically responding to a DELETE operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

components:
  schemas:
    UserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        pass:
          type: string
        phone:
          type: string

    UserResponse:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string

    UserListResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserResponse'

    Message:
      type: object
      properties:
        message:
          type: string
          description: success message
          example: 'successfully deletion '
        id:
          type: string
          description: identifier of the deleted element
          example: "1234"
